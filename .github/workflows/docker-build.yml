# GitHub Actions Workflow Definition: This YAML file outlines the CI/CD pipeline for your Python application.
# It should be placed in your repository under the path: '.github/workflows/ci-cd-python.yml'.

name: Python CI/CD Pipeline # Workflow name for Python app.

on:
  push:
    branches:
      - main # Triggers on push to the 'main' branch.
  workflow_dispatch: # Allows manual triggering from GitHub UI.

jobs:
  build-and-run:
    runs-on: ubuntu-latest # Runner environment.

    steps:
      - name: Checkout Code # Clones the repository.
        uses: actions/checkout@v4

      - name: Log in to Docker Hub # Authenticates with Docker Hub.
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx # Sets up Docker Buildx.
        uses: docker/setup-buildx-action@v3

      - name: Get current date for image tag # Generates a unique timestamp for the Docker image tag.
        id: date
        run: echo "DATE=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

      - name: Build and Push Docker image # Builds and pushes the Docker image.
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          # IMPORTANT: Replace 'YOUR_DOCKERHUB_USERNAME' with your actual DockerHub username.
          tags: ${{ secrets.DOCKER_USERNAME }}/python-app:${{ steps.date.outputs.DATE }},${{ secrets.DOCKER_USERNAME }}/python-app:latest

      - name: Run Docker container (for verification on runner) # Runs the container for verification.
        run: |
          echo "Stopping and removing any previous containers (if existing on this temporary runner)..."
          docker stop python-app-container || true
          docker rm python-app-container || true
          
          echo "Running container from image ${{ secrets.DOCKER_USERNAME }}/python-app:latest"
          docker run -d -p 5000:5000 --name python-app-container ${{ secrets.DOCKER_USERNAME }}/python-app:latest # Python app uses port 5000
          
          echo "Container started. Waiting 15 seconds for the app to initialize (Python apps might take longer)..."
          sleep 15 # Increased sleep for Python app startup
          
          echo "Verifying application access via curl (http://localhost:5000)..."
          curl -v http://localhost:5000 || true # Curl targets port 5000
          
          echo "Viewing container logs..."
          docker logs python-app-container
